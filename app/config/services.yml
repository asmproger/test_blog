# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
#    _defaults:
        # automatically injects dependencies in your services
#        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
#        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
#        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    admin.page:
        class: AppBundle\Admin\PageAdmin
        arguments: [~, AppBundle\Entity\Page, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Static Pages }
        roles: [ROLE_ADMIN]
        public: true
        calls:
            - [ setTemplate, [layout, 'admin/layout.html.twig'] ]
            - [ setTemplate, [edit, 'admin/page/edit.html.twig'] ]

    admin.setting:
            class: AppBundle\Admin\SettingsAdmin
            arguments: [~, AppBundle\Entity\Setting, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Settings }
            roles: [ROLE_ADMIN]
            public: true

    admin.posts:
        class: AppBundle\Admin\BlogPostsAdmin
        arguments: [~, AppBundle\Entity\BlogPost, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Blog Posts}
        calls:
            - [ setTemplate, [layout, 'admin/layout.html.twig'] ]
            - [ setTemplate, [edit, 'admin/blog/edit.html.twig'] ]


    google_parser:
        class: AppBundle\Service\GoogleEngine
        public: true

    AppBundle\Command\CustomCommand:
        public: true
        tags: [console.command]
        arguments:
            $doctrine: '@doctrine'



    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
