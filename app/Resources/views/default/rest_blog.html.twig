{% extends 'base.html.twig' %}

{% block body %}
    <script>
        // init vars
        var current_page = 1,
            pages = 1,
            formWrapper, bList, bItem, paginationContainer, table;

        // update active element
        function updatePagination() {
            paginationContainer.find('li.active').removeClass('active');
            paginationContainer.find('a[data-page="' + current_page + '"]').closest('li').addClass('active');
        }

        // create paginator, with pages count from server
        function buildPagination() {
            if (pages <= 1) {
                return;
            }
            for (var i = 1; i <= pages; i++) {
                var $item = $('<li></li>');
                var $span = $('<span></span>');
                var $a = $('<a>', {'data-page': i, 'href': 'javascript://', 'html': i});
                $span.append($a);
                $item.append($span);
                if (i === 1) {
                    $item.addClass('active');
                }
                paginationContainer.append($item);
            }
        }

        // retieve pages count from server
        // callback - any function you want
        function updatePagesCount(callback) {
            $.ajax({
                dataType: 'json',
                url: '{{ path("get_blogs_count") }}',
                success: function (response) {
                    pages = parseInt(response.count);
                    pages /= 10; // dirty hack


                    if (typeof callback === 'function') {
                        callback();
                    }
                }
            });
        }

        // load selected page from server with REST
        function loadPage(page, isHref) {
            // dirty hack, will be replaced with bundle

            var url = '{{ path("get_blog_all", {"page": "page_id", "ipp": 10 }) }}';
            url = url.replace("page_id", page);
            if (isHref) {
                url = page;
            }

            $.ajax({
                dataType: 'html',
                url: url,
                headers: {
                    'Accept': 'text/html'
                },
                beforeSend: function () {
                    postsWrapper.css('opacity', 0.5);
                },
                success: function (html, statusText, obj) {
                    current_page = page;

                    postsWrapper.html(html);
                    postsWrapper.css('opacity', 1);

                    // update active page on paginator
                    updatePagination();
                }
            });
        }

        function showForm() {
            bList.hide();
            bItem.hide();
            formWrapper.show();
        }

        function showList() {
            bList.show();
            bItem.hide();
            formWrapper.hide();
        }

        function showItem() {
            bList.hide();
            bItem.show();
            formWrapper.hide();
        }

        $(document).ready(function () {
            postsWrapper = $('.blogs-list');
            paginationContainer = $('.paginator-wrapper .pagination');
            // wrapper for posts table
            bList = $('.blogs-list');
            //wrapper for blog item (when view)
            bItem = $('.blog-item');
            // wrapper for add/edit form
            formWrapper = $('.post-form');

            // let's get pages count from server and build paginator
            updatePagesCount(function () {
                loadPage(1);
                buildPagination();
            });

            // jq fileuploader
            $('#form_pic').fileupload({
                url: '{{ path('rest_blog_upload') }}',
                dataType: 'json',
                done: function (e, data) {
                    if(data.result.status) {
                        $('#form_image').css('width', '150px');
                        $('#form_image').attr('src', '/uploads/images/' + data.result.data.image);
                        $('#form_image').show();

                        $('#form__image_id').val(data.result.data.id);
                        $('#form__image_token').val(data.result.data.token);
                    }
                    console.log(data);
                    $.each(data.result.files, function (index, file) {
                        $('<p/>').text(file.name).appendTo('#files');
                    });
                },
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#progress .progress-bar').css(
                        'width',
                        progress + '%'
                    );
                }
            })
        });

        //form submit, collect data from html and ajax to post action
        $(document).on('click', '#form_submit', function (e) {
            var $form = $(this).closest('form');
            var data = $form.serialize();
            $.ajax({
                url: '{{ path('rest_blog') }}',
                data: data,
                type: 'post',
                dataType: 'json',
                success: function (response) {
                    console.log(response);
                    if (response.status) {
                        $form.find('p.help-block').html('');
                    } else {
                        if (response.errs) {
                            for (var i in response.errs) {
                                var err = response.errs[i];
                                var el = $('#form_' + err.element);
                                $('#form_' + err.element).closest('div').find('p.help-block').html(err.error);
                            }
                        }
                    }
                },
                fail: function (resposne) {

                }
            });
            return false;
        });

        // for paginator links
        $(document).on('click', '.pagination a', function (e) {
            var self = $(this);
            var page = parseInt(self.data('page'));
            var href = self.attr('href');
            console.log(href);
            //if (page !== current_page) {
            loadPage(href, 1);
            //}

            return false;
        });

        // back to posts list from viewving single post
        $(document).on('click', '.back-to-list', function () {
            bList.show();
            bItem.hide();
            bItem.html('');
        });

        // lets view single item
        $(document).on('click', '.blog-title', function () {
            var self = $(this);
            var id = self.data('id');
            // dirty hack, will be replaced with bundle
            var url = '{{ path("get_blog", {"id": "id" }) }}';
            url = url.replace("id", id);
            $.ajax({
                url: url,
                type: 'get',
                data: {},
                headers: {
                    'Accept': '*/*'
                },
                beforeSend: function (request) {
                    postsWrapper.css('opacity', 0.5);
                },
                success: function (html, statusText, obj) {
                    bItem.html(html);
                    bList.hide();
                    bItem.show();
                    postsWrapper.css('opacity', 1);
                }
            });
        });
    </script>
    <div id="wrapper">
        <div id="container">
            {{ knp_menu_render('AppBundle:Builder:mainMenu') }}
            <div class="text-right">
                <a class="btn btn-primary" onclick="showForm();" href="javascript://">Add</a>
            </div>
            <div id="welcome">
                <h1><span>REST AJAX BLOG</span></h1>
            </div>

            <div class="blogs-list">
                {# fot ajax content #}
            </div>

            <div class="blog-item" style="display: none;"></div>

            <div class="post-form" style="display: none">
                <a href="javascript://" onclick="showList()">Back to list</a>
                {{ form_start(form, {'attr' : {'class': 'blogpost-form'}}) }}
                <div class="form-group">
                    {{ form_label(form.title) }}
                    {{ form_widget(form.title, {'attr' : {'class': 'form-control'}}) }}
                    <p class="help-block">{{ form_errors(form.title) }}</p>
                </div>
                <div class="form-group">
                    {{ form_label(form.short) }}
                    {{ form_widget(form.short, {'attr' : {'class': 'form-control'}}) }}
                    <p class="help-block">{{ form_errors(form.short) }}</p>
                </div>
                <div class="form-group">
                    {{ form_label(form.body) }}
                    {{ form_widget(form.body, {'attr' : {'class': 'form-control'}}) }}
                    <p class="help-block">{{ form_errors(form.body) }}</p>
                </div>
                <div class="form-group">
                    {{ form_widget(form.pic, {'attr' : {'class': 'form-control'}}) }}
                    <p class="help-block">{{ form_errors(form.pic) }}</p>
                    <img id="form_image" style="display: none;" onload="$(this).show();" class="product-image-preview"
                         src="{{ asset('/uploads/images/') ~ form.vars.value.pic }}"/>
                </div>
                <div class="form-group text-right">
                    {{ form_widget(form.submit, {'attr' : {'class': 'btn btn-primary'}}) }} or <a href=""
                                                                                                  onclick="history.back(); return false;">cancel</a>
                </div>
                {{ form_end(form) }}
            </div>

        </div>
    </div>
{% endblock %}
{% block stylesheets %}
    <style>
        #rest-container {
            margin-top: 20px;
            padding: 10px;
            border: 1px solid gray;

        }

        body {
            background: #F5F5F5;
            font: 18px/1.5 sans-serif;
        }

        h1, h2 {
            line-height: 1.2;
            margin: 0 0 .5em;
        }

        h1 {
            font-size: 36px;
        }

        h2 {
            font-size: 21px;
            margin-bottom: 1em;
        }

        p {
            margin: 0 0 1em 0;
        }

        a {
            color: #0000F0;
        }

        a:hover {
            text-decoration: none;
        }

        code {
            background: #F5F5F5;
            max-width: 100px;
            padding: 2px 6px;
            word-wrap: break-word;
        }

        #wrapper {
            background: #FFF;
            margin: 1em auto;
            max-width: 800px;
            width: 95%;
        }

        #container {
            padding: 2em;
        }

        #welcome, #status {
            margin-bottom: 2em;
        }

        #welcome h1 span {
            display: block;
            font-size: 75%;
        }

        #icon-status, #icon-book {
            float: left;
            height: 64px;
            margin-right: 1em;
            margin-top: -4px;
            width: 64px;
        }

        #icon-book {
            display: none;
        }

        @media (min-width: 768px) {
            #wrapper {
                width: 80%;
                margin: 2em auto;
            }

            #icon-book {
                display: inline-block;
            }

            #status a, #next a {
                display: block;
            }

            @-webkit-keyframes fade-in {
                0% {
                    opacity: 0;
                }
                100% {
                    opacity: 1;
                }
            }
            @keyframes fade-in {
                0% {
                    opacity: 0;
                }
                100% {
                    opacity: 1;
                }
            }
            .sf-toolbar {
                opacity: 0;
                -webkit-animation: fade-in 1s .2s forwards;
                animation: fade-in 1s .2s forwards;
            }
        }
    </style>
{% endblock %}